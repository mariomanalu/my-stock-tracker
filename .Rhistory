ui <- dashboardPage(
dashboardHeader(title = "My Stock Tracker"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box (
title = "Price chart",
plotOutput ("plot", height = 250)
),
box (
title = "Stocks",
selectInput("Tickers",
"Tickers",
choices = c("AAPL", "SQ", "TGT", "SPY", "PLTR"),
selected = choices[0]
),
textOutput("result")
)
)
)
)
server <- function(input, output) {
output$result<- renderText({
paste("You chose", input$Tickers)
})
output$plot <- renderPlot({
stock <- tq_get(input$Tickers,
from = "2021-01-01",
to = "2021-08-24",
get = "stock.prices")
stock %>%
ggplot(aes(x = date, y = adjusted)) +
geom_line() +
theme_classic() +
labs(x = 'Date',
y = "Adjusted Price",
title = "Apple price chart") +
scale_y_continuous(breaks = seq(0,300,10))
})
}
shinyApp(ui, server)
# ui.R
ui <- dashboardPage(
dashboardHeader(title = "My Stock Tracker"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box (
title = "Price chart",
plotOutput ("plot", height = 250)
),
box (
title = "Stocks",
selectInput("Tickers",
"Tickers",
choices = stocks <- c("AAPL", "SQ", "TGT", "SPY", "PLTR"),
selected = stocks[0]
),
textOutput("result")
)
)
)
)
# ui.R
ui <- dashboardPage(
dashboardHeader(title = "My Stock Tracker"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box (
title = "Price chart",
plotOutput ("plot", height = 250)
),
box (
title = "Stocks",
selectInput("Tickers",
"Tickers",
choices = c("AAPL", "SQ", "TGT", "SPY", "PLTR"),
selected = "AAPL"
),
textOutput("result")
)
)
)
)
server <- function(input, output) {
output$result<- renderText({
paste("You chose", input$Tickers)
})
output$plot <- renderPlot({
stock <- tq_get(input$Tickers,
from = "2021-01-01",
to = "2021-08-24",
get = "stock.prices")
stock %>%
ggplot(aes(x = date, y = adjusted)) +
geom_line() +
theme_classic() +
labs(x = 'Date',
y = "Adjusted Price",
title = "Apple price chart") +
scale_y_continuous(breaks = seq(0,300,10))
})
}
shinyApp(ui, server)
# ui.R
ui <- dashboardPage(
dashboardHeader(title = "My Stock Tracker"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box (
title = "Price chart",
plotOutput ("plot", height = 250)
),
box (
title = "Stocks",
selectInput("Tickers",
"Tickers",
choices = c("AAPL", "SQ", "TGT", "SPY", "PLTR"),
selected = "AAPL"
),
textOutput("result")
)
)
)
)
server <- function(input, output) {
paste("You chose", input$Tickers)
output$result<- renderText({
paste("You chose", input$Tickers)
})
output$plot <- renderPlot({
stock <- tq_get(input$Tickers,
from = "2021-01-01",
to = "2021-08-24",
get = "stock.prices")
stock %>%
ggplot(aes(x = date, y = adjusted)) +
geom_line() +
theme_classic() +
labs(x = 'Date',
y = "Adjusted Price",
scale_y_continuous(breaks = seq(0,300,10))
})
}
shinyApp(ui, server)
# ui.R
ui <- dashboardPage(
dashboardHeader(title = "My Stock Tracker"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box (
title = "Price chart",
plotOutput ("plot", height = 250)
),
box (
title = "Stocks",
selectInput("Tickers",
"Tickers",
choices = c("AAPL", "SQ", "TGT", "SPY", "PLTR"),
selected = "AAPL"
),
textOutput("result")
)
)
)
)
server <- function(input, output) {
output$result<- renderText({
paste("You chose", input$Tickers)
})
output$plot <- renderPlot({
stock <- tq_get(input$Tickers,
from = "2021-01-01",
to = "2021-08-24",
get = "stock.prices")
stock %>%
ggplot(aes(x = date, y = adjusted)) +
geom_line() +
theme_classic() +
labs(x = 'Date',
y = "Adjusted Price") +
scale_y_continuous(breaks = seq(0,300,10))
})
}
shinyApp(ui, server)
# ui.R
ui <- dashboardPage(
dashboardHeader(title = "My Stock Tracker"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box (
title = "Price chart",
plotOutput ("plot", height = 250)
),
box (
title = "Stocks",
selectInput("Tickers",
"Tickers",
choices = c("AAPL", "SQ", "TGT", "SPY", "PLTR"),
selected = "AAPL"
),
textOutput("result")
)
)
)
)
server <- function(input, output) {
output$result<- renderText({
paste("You chose", input$Tickers)
})
output$plot <- renderPlot({
stock <- tq_get(input$Tickers,
from = "2021-01-01",
to = "2021-08-24",
get = "stock.prices")
stock %>%
ggplot(aes(x = date, y = adjusted)) +
geom_line() +
theme_classic() +
labs(x = 'Date',
y = "Adjusted Price") +
scale_y_continuous(breaks = seq(0,300,10))
})
}
shinyApp(ui, server)
stock <- tq_get(input$Tickers,
from = "2021-01-01",
to = "2021-08-24",
get = "stock.prices")
stock %>%
ggplot(aes(x = date, y = adjusted)) +
geom_line() +
theme_classic() +
labs(x = 'Date',
y = "Adjusted Price") +
scale_y_continuous(breaks = seq(0,300,10))
output$plot <- renderPlot({
stock <- tq_get(input$Tickers,
from = "2021-01-01",
to = "2021-08-24",
get = "stock.prices")
stock %>%
ggplot(aes(x = date, y = adjusted)) +
geom_line() +
theme_classic() +
labs(x = 'Date',
y = "Adjusted Price") +
scale_y_continuous(breaks = seq(0,300,10))
})
# ui.R
ui <- dashboardPage(
dashboardHeader(title = "My Stock Tracker"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box (
title = "Stock Price Chart",
plotOutput ("plot", height = 250)
),
box (
title = "Stocks",
selectInput("Tickers",
"Tickers",
choices = c("AAPL", "SQ", "TGT", "SPY", "PLTR"),
selected = "AAPL"
)
)
)
)
)
server <- function(input, output) {
output$plot <- renderPlot({
stock <- tq_get(input$Tickers,
from = "2021-01-01",
to = "2021-08-24",
get = "stock.prices")
stock %>%
ggplot(aes(x = date, y = adjusted)) +
geom_line() +
theme_classic() +
labs(x = 'Date',
y = "Adjusted Price") +
scale_y_continuous(breaks = seq(0,300,10))
})
}
shinyApp(ui, server)
# ui.R
ui <- dashboardPage(
dashboardHeader(title = "My Stock Tracker"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box (
title = "Stock Price Chart",
plotOutput ("plot", height = 250)
),
box (
title = "Stocks",
selectInput("Tickers",
"Tickers",
choices = c("AAPL", "SQ", "TGT", "SPY", "PLTR"),
selected = "AAPL"
)
),
box (
title = "Stock Price Chart",
plotOutput ("plot", height = 250)
)
)
)
)
server <- function(input, output) {
output$plot <- renderPlot({
stock <- tq_get(input$Tickers,
from = "2021-01-01",
to = "2021-08-24",
get = "stock.prices")
stock %>%
ggplot(aes(x = date, y = adjusted)) +
geom_line() +
theme_classic() +
labs(x = 'Date',
y = "Adjusted Price") +
scale_y_continuous(breaks = seq(0,300,10))
})
}
shinyApp(ui, server)
# ui.R
ui <- dashboardPage(
dashboardHeader(title = "My Stock Tracker"),
dashboardSidebar(),
dashboardBody(
fluidRow(
row(
box (
title = "Stock Price Chart",
plotOutput ("plot", height = 250)
),
box (
title = "Stocks",
selectInput("Tickers",
"Tickers",
choices = c("AAPL", "SQ", "TGT", "SPY", "PLTR"),
selected = "AAPL"
)
)
),
row(
box (
title = "Stock Price Chart",
plotOutput ("plot", height = 250)
)
)
)
)
)
server <- function(input, output) {
output$plot <- renderPlot({
stock <- tq_get(input$Tickers,
from = "2021-01-01",
to = "2021-08-24",
get = "stock.prices")
stock %>%
ggplot(aes(x = date, y = adjusted)) +
geom_line() +
theme_classic() +
labs(x = 'Date',
y = "Adjusted Price") +
scale_y_continuous(breaks = seq(0,300,10))
})
}
shinyApp(ui, server)
# ui.R
ui <- dashboardPage(
dashboardHeader(title = "My Stock Tracker"),
dashboardSidebar(),
dashboardBody(
fluidRow(
row(
box (
title = "Stock Price Chart",
plotOutput ("plot", height = 250)
),
box (
title = "Stocks",
selectInput("Tickers",
"Tickers",
choices = c("AAPL", "SQ", "TGT", "SPY", "PLTR"),
selected = "AAPL"
)
)
),
row(
box (
title = "Stock Price Chart",
plotOutput ("plot", height = 250)
)
)
)
)
)
# ui.R
ui <- dashboardPage(
dashboardHeader(title = "My Stock Tracker"),
dashboardSidebar(),
dashboardBody(
fluidRow(
row(
box (
title = "Stock Price Chart",
plotOutput ("plot", height = 250)
),
box (
title = "Stocks",
selectInput("Tickers",
"Tickers",
choices = c("AAPL", "SQ", "TGT", "SPY", "PLTR", "BTC", "DOGE", "ETH", "ETC"),
selected = "AAPL"
)
)
),
row(
box (
title = "Stock Price Chart",
plotOutput ("plot", height = 250)
)
)
)
)
)
# ui.R
ui <- dashboardPage(
dashboardSidebar(),
# ui.R
ui <- dashboardPage(
dashboardHeader(title = "My Stock Tracker"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box (
title = "Stock Price Chart",
plotOutput ("plot", height = 250)
),
box (
title = "Stocks",
selectInput("Tickers",
"Tickers",
choices = c("AAPL", "SQ", "TGT", "SPY", "PLTR", "BTC", "DOGE", "ETH", "ETC"),
selected = "AAPL"
)
)
)
)
)
server <- function(input, output) {
output$plot <- renderPlot({
stock <- tq_get(input$Tickers,
from = "2021-01-01",
to = "2021-08-24",
get = "stock.prices")
stock %>%
ggplot(aes(x = date, y = adjusted)) +
geom_line() +
theme_classic() +
labs(x = 'Date',
y = "Adjusted Price") +
scale_y_continuous(breaks = seq(0,300,10))
})
}
clear
# ui.R
ui <- dashboardPage(
dashboardHeader(title = "My Stock Tracker"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box (
title = "Stock Price Chart",
plotOutput ("plot", height = 250)
),
box (
title = "Stocks",
selectInput("Tickers",
"Tickers",
choices = c("AAPL", "SQ", "TGT", "SPY", "PLTR", "BTC", "DOGE", "ETH", "ETC"),
selected = "AAPL"
)
)
)
)
)
server <- function(input, output) {
output$plot <- renderPlot({
stock <- tq_get(input$Tickers,
from = "2021-01-01",
to = "2021-08-24",
get = "stock.prices")
stock %>%
ggplot(aes(x = date, y = adjusted)) +
geom_line() +
theme_classic() +
labs(x = 'Date',
y = "Adjusted Price") +
scale_y_continuous(breaks = seq(0,300,10))
})
}
shinyApp(ui, server)
shinyApp(ui, server)
